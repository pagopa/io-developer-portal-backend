swagger: "2.0"
info:
  description: "This is an [Express](http://expressjs.com/) web application which implements some tasks to automate the provisioning of users in the Digital Citizenship Azure API management _developer portal_.\n\nThe aim is to automate some operations that would otherwise require the manual intervention of the APIs administrator: this lets developers start testing the API just after signing-up.\n\nUser's authentication takes place against an [Azure Active Directory B2C](https://azure.microsoft.com/en-us/services/active-directory-b2c/) tenant."
  version: "0.1.0"
  title: Digital citizenship portal

paths: {}

definitions:

  #Returned by GET /subscriptions
  #Returned by GET /subscriptions/:email
  SubscriptionCollection:
    type: array
    items:
      $ref: "#/definitions/SubscriptionContract"

  #Returned by POST /subscriptions
  #Returned by POST /subscriptions/:email
  #Returned by PUT /subscriptions/:subscriptionId/:keyType
  SubscriptionContract:
    allOf:
      - $ref: "#/definitions/Resource"
      - type: object
        properties:
          userId:
            type: string
          productId:
            type: string
          displayName:
            type: string
          state:
            type: string
          createdDate:
            type: string
            format: "date-time"
          startDate:
            type: string
            format: "date-time"
          expirationDate:
            type: string
            format: "date-time"
          endDate:
            type: string
            format: "date-time"
          notificationDate:
            type: string
            format: "date-time"
          primaryKey:
            type: string
          secondaryKey:
            type: string
          stateComment:
            type: string
        required:
          - userId
          - productId
          - state
          - primaryKey
          - secondaryKey

  Resource:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string

  #Returned by GET /services/:serviceId
  Service:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/Service'

  #Returned by PUT /services/:serviceId
  ServicePublic:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/ServicePublic'

  ServiceId:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/ServiceId'

  ServiceName:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/ServiceName'

  OrganizationName:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/OrganizationName'

  DepartmentName:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/DepartmentName'

  OrganizationFiscalCode:
    $ref: 'https://raw.githubusercontent.com/pagopa/io-functions/v0.64.0/api/definitions.yaml#/OrganizationFiscalCode'

  #Returned by GET /user
  #Returned by GET /user/:email
  UserData:
    type: object
    properties:
      apimUser:
        $ref: "#/definitions/ExtendedUserContract"
      authenticatedUser:
        $ref: "#/definitions/SessionUser"
    required:
      - authenticatedUser

  ExtendedUserContract:
    allOf:
      - $ref: "#/definitions/UserContract"
      - type: object
        properties:
          id:
            type: string
          name:
            type: string
          email:
            type: string
          groupNames:
            type: array
            items:
              type: string
        required:
          - id
          - name
          - email
          - groupNames

  UserContract:
    allOf:
      - $ref: "#/definitions/Resource"
      - type: object
        properties:
          state:
            type: string
          note:
            type: string
          identities:
            type: array
            items:
              $ref: "#/definitions/UserIdentityContract"
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          registrationDate:
            type: string
            format: 'date-time'
          groups:
            type: array
            items:
              $ref: "#/definitions/GroupContractProperties"

  UserIdentityContract:
    type: object
    properties:
      provider:
        type: string
      id:
        type: string

  GroupContractProperties:
    type: object
    properties:
      displayName:
        type: string
      description:
        type: string
      builtIn:
        type: boolean
      type:
        type: string
      externalId:
        type: string
    required:
      - displayName

  # FIXME: this is a temporary solution to introduce a definition, SessionUser
  #  which abstracts and encompasses any kind of authenticated user's shape
  # So far we have only one inmplementation, AdUser, thus the seems-to-be-useless alias definition
  SessionUser:
    $ref: '#/definitions/AdUser'  

  AdUser:
    type: object
    properties:
      emails:
        type: array
        items:
          $ref: '#/definitions/EmailAddress'
      extension_Department:
        type: string
      extension_Organization:
        type: string
      extension_Service:
        type: string
      family_name:
        type: string
      given_name:
        type: string
      oid:
        $ref: '#/definitions/NotEmptyString'
    required:
      - emails
      - family_name
      - given_name
      - oid

  EmailAddress:
    type: string
    format: email

  NotEmptyString:
    type: string
    minLength: 1

  #Returned by GET /users
  UserDataList:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/ApimUser"
      length:
        type: number

  ApimUser:
    type: object
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  #Returned by GET /configuration
  PublicConfig:
    x-one-of: true
    allOf:
      - $ref: "#/definitions/MsalConfig"
      - $ref: "#/definitions/SelfCareConfig"

  MsalConfig:
    type: object
    properties:
      audience:
        type: string
      authority:
        type: string
      b2cScopes:
        type: "array"
        items:
          type: string
      changePasswordLink:
        type: string
      clientID:
        type: string
    required:
      - audience
      - authority
      - b2cScopes
      - changePasswordLink
      - clientID
  
  SelfCareConfig:
    type: object
    properties:
      login_url:
        type: string
    required:
      - login_url